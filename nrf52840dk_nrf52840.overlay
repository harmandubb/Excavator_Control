// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://docs.nordicsemi.com/bundle/nrf-connect-vscode/page/guides/ncs_configure_app.html#devicetree-support-in-the-extension

/{

    zephyr,user {
        io-channels = <&adc 0>, <&adc 1>, <&adc 2>; 
    };

    aliases {
        pwm-motor0 = &pwm_motor0;
        pwm-motor1 = &pwm_motor1;
        pwm-motor2 = &pwm_motor2;

    };

    pwmmotors {
        compatible = "pwm-leds";
        pwm_motor0: pwm_motor_0 {
            pwms = <&pwm0 0 PWM_NSEC(10000) PWM_POLARITY_NORMAL>;
        };
        pwm_motor1: pwm_motor_1 {
            pwms = <&pwm0 1 PWM_NSEC(10000) PWM_POLARITY_NORMAL>;
        };

        pwm_motor2: pwm_motor_2 {
            pwms = <&pwm0 2 PWM_NSEC(10000) PWM_POLARITY_NORMAL>;
        };
    };
};

&adc {
    #address-cells = <1>;
    #size-cells = <0>;
    status = "okay";

    channel@0 {
        reg = <0>;
        zephyr,gain = "ADC_GAIN_1_2";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,input-positive = <NRF_SAADC_AIN0>; /* P0.02 */
        zephyr,resolution = <12>;
        zephyr,oversampling = <0>;
    };

    channel@1 {
        reg = <1>;
        zephyr,gain = "ADC_GAIN_1_2";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,input-positive = <NRF_SAADC_AIN1>; /* P0.03 */
        zephyr,resolution = <12>;
        zephyr,oversampling = <0>;
    };

    channel@2 {
        reg = <2>;
        zephyr,gain = "ADC_GAIN_1_2";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,input-positive = <NRF_SAADC_AIN2>; /* P0.28 */
        zephyr,resolution = <12>;
        zephyr,oversampling = <0>;
    };

};

/* STEP 1.3 - Add your own custom pwm0 instance */
&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_custom>;
    pinctrl-1 = <&pwm0_csleep>;
    pinctrl-names = "default", "sleep";
};

/* STEP 1.4 - Configure which pins your custom pwm0 instance should use */
&pinctrl {
    pwm0_custom: pwm0_custom {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 13)>,
                    <NRF_PSEL(PWM_OUT0, 1, 10)>,
                    <NRF_PSEL(PWM_OUT0, 1, 6)>;
        };
    };

    pwm0_csleep: pwm0_csleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 13)>,
                    <NRF_PSEL(PWM_OUT0, 1, 10)>,
                    <NRF_PSEL(PWM_OUT0, 1, 6)>;
            low-power-enable;
        };
    };
};





